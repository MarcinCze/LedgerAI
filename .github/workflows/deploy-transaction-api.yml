name: Deploy Transaction API to OVH

on:
  push:
    branches: [ main ]
    paths:
      - 'TransactionAPI/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'TransactionAPI/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: pdo, pdo_mysql, json, curl
        
    - name: Validate PHP syntax
      run: |
        find TransactionAPI -name "*.php" -exec php -l {} \;
        
    - name: Create deployment package
      run: |
        # Create deployment directory
        mkdir -p deploy
        
        # Copy entire TransactionAPI structure (api/ and public/ folders)
        cp -r TransactionAPI/* deploy/
        
        # Create environment configuration
        cat > deploy/.env << EOF
        ENVIRONMENT=production
        DB_HOST=${{ secrets.TRANSACTIONAPI_DB_HOST }}
        DB_NAME=${{ secrets.TRANSACTIONAPI_DB_NAME }}
        DB_USERNAME=${{ secrets.TRANSACTIONAPI_DB_USERNAME }}
        DB_PASSWORD=${{ secrets.TRANSACTIONAPI_DB_PASSWORD }}
        JWT_SECRET=${{ secrets.TRANSACTIONAPI_JWT_SECRET }}
        EOF
        
        # Create deployment info
        cat > deploy/public/deploy-info.json << EOF
        {
          "deployed_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "commit_hash": "${{ github.sha }}",
          "branch": "${{ github.ref_name }}",
          "workflow_run": "${{ github.run_number }}"
        }
        EOF
        
        # Create PHP test file for debugging
        cat > deploy/public/test.php << 'EOF'
        <?php
        echo "PHP is working! Server time: " . date('Y-m-d H:i:s') . "\n";
        echo "PHP version: " . phpversion() . "\n";
        echo "Current directory: " . __DIR__ . "\n";
        echo "Files in directory: " . implode(', ', scandir(__DIR__)) . "\n";
        ?>
        EOF
        
    - name: Deploy to OVH FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.TRANSACTIONAPI_FTP_SERVER }}
        username: ${{ secrets.TRANSACTIONAPI_FTP_USERNAME }}
        password: ${{ secrets.TRANSACTIONAPI_FTP_PASSWORD }}
        protocol: ftp
        port: 21
        local-dir: ./deploy/
        server-dir: ${{ secrets.TRANSACTIONAPI_FTP_REMOTE_DIR }}
        # Note: This deploys the complete structure:
        # - /api/ (private files, above web root)
        # - /public/ (web-accessible files, your domain should point here)
        # - /.env (environment variables)
        # - /database/ (schema files)
        # Clean deployment - removes old files that no longer exist in source
        dangerous-clean-slate: true
        # This will delete all files on server first, then upload fresh copy
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/Thumbs.db
          
    - name: Test API endpoint
      run: |
        # Wait a moment for deployment to complete
        sleep 10
        
        # Test health endpoint with detailed debugging
        echo "==== DEBUGGING HEALTH CHECK ===="
        echo "Base URL: ${{ secrets.TRANSACTIONAPI_BASE_URL }}"
        
        echo "1. Testing root domain response:"
        curl -H "User-Agent: Mozilla/5.0 (GitHub-Actions)" -I "${{ secrets.TRANSACTIONAPI_BASE_URL }}/" || echo "Root domain check failed"
        
        echo "2. Testing deploy-info.json (should be in public folder):"
        curl -H "User-Agent: Mozilla/5.0 (GitHub-Actions)" -I "${{ secrets.TRANSACTIONAPI_BASE_URL }}/deploy-info.json" || echo "Deploy info not accessible"
        
        echo "3. Testing health endpoint:"
        curl -H "User-Agent: Mozilla/5.0 (GitHub-Actions)" -f "${{ secrets.TRANSACTIONAPI_BASE_URL }}/health" || echo "Health check failed"
        
        echo "4. Testing PHP functionality:"
        curl -H "User-Agent: Mozilla/5.0 (GitHub-Actions)" "${{ secrets.TRANSACTIONAPI_BASE_URL }}/test.php" || echo "PHP test failed"
        
        echo "5. Testing with index.php explicitly:"
        curl -H "User-Agent: Mozilla/5.0 (GitHub-Actions)" "${{ secrets.TRANSACTIONAPI_BASE_URL }}/index.php" || echo "Direct index.php failed"
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Transaction API deployed successfully to OVH"
          echo "üîó API URL: ${{ secrets.TRANSACTIONAPI_BASE_URL }}"
          echo "üìä Health Check: ${{ secrets.TRANSACTIONAPI_BASE_URL }}/health"
        else
          echo "‚ùå Transaction API deployment failed"
        fi
 